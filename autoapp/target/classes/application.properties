spring.jpa.database-platform=com.waitrose.app.config.SQLiteDialect
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.EJB3NamingStrategy
server.port=2021

# session timeout in second
server.servlet.session.timeout=10s
server.session.cookie.max-age=5000
server.session.timeout=5000

#db
#db.path=/Users/saravanan/eclipse-workspace/AutomationApp-master/autoapp/automate.db
#db.path=/home/ec2-user/sqlite-tools-linux-x86-3230100/automate.db
db.path=C:/automationapp/autoapp/autoapp/automate.db

#logging prod/dev
spring.profiles.active=dev

logging.level.org.springframework.web=ERROR
logging.level.com.waitrose=DEBUG
logging.level.com.waitrose=INFO
# root logging level, warning : too much output
#logging.level.=DEBUG

# Logging pattern for the console
#logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Logging pattern for file
#logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
#logging.file=${java.io.tmpdir}/application.log
#logging.file=C:/automationapp/logs/app.log
#Access privillages
userpage.access=hasAnyRole('ROLE_USER','ROLE_GUEST')
loginpage.access=hasAnyRole('ROLE_USER', 'ROLE_ADMIN','ROLE_GUEST')
adminpage.access=hasRole('ROLE_ADMIN')


#For non-web boot app, we can override the log file output like this - $ java -Dlogging.file=/home/sara/app/logs/app.log -jar app1.0.jar 